{"ast":null,"code":"import _classCallCheck from \"/mnt/z/work/ibet-django/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/z/work/ibet-django/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/mnt/z/work/ibet-django/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/mnt/z/work/ibet-django/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/mnt/z/work/ibet-django/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/mnt/z/work/ibet-django/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/mnt/z/work/ibet-django/front-end/src/components/forget_password.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { config } from '../util_config';\nimport { FormattedMessage } from 'react-intl';\nimport { errors } from './errors';\nvar API_URL = process.env.REACT_APP_REST_API;\n\nvar Forget_Password =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Forget_Password, _Component);\n\n  function Forget_Password(props) {\n    var _this;\n\n    _classCallCheck(this, Forget_Password);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Forget_Password).call(this, props));\n    _this.state = {\n      old_email: '',\n      success: false,\n      errorCode: '',\n      button_disable: true,\n      live_check_email: '',\n      email_not_exist: false\n    };\n    _this.onInputChange_old_email = _this.onInputChange_old_email.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onFormSubmit = _this.onFormSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Forget_Password, [{\n    key: \"onInputChange_old_email\",\n    value: function onInputChange_old_email(event) {\n      var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n      if (!event.target.value.match(re)) {\n        this.setState({\n          live_check_email: true,\n          button_disable: true\n        });\n      } else {\n        this.setState({\n          live_check_email: false,\n          button_disable: false\n        });\n      }\n\n      this.setState({\n        old_email: event.target.value,\n        email_not_exist: false\n      });\n    }\n  }, {\n    key: \"onFormSubmit\",\n    value: function onFormSubmit(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n      var body = {\n        email: this.state.old_email\n      };\n      axios.get(API_URL + \"users/api/checkemailexist/?email=\".concat(this.state.old_email), config).then(function (res) {\n        if (res.data === 'Exist') {\n          axios.post(API_URL + 'users/api/reset-password/', body, config).then(function (res) {\n            _this2.setState({\n              success: true\n            });\n\n            _this2.props.history.push(\"/email_sent\");\n          }).catch(function (err) {\n            _this2.setState({\n              errorCode: errors.EMAIL_NOT_VALID\n            });\n          });\n        } else {\n          _this2.setState({\n            email_not_exist: true\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var showErrors = function showErrors() {\n        if (_this3.state.success) {\n          return React.createElement(\"div\", {\n            style: {\n              color: 'red'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }, React.createElement(FormattedMessage, {\n            id: \"email_sent.message\",\n            defaultMessage: \"An email has been sent to you email address to reset your password\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }));\n        } else if (_this3.state.errorCode === errors.EMAIL_NOT_VALID) {\n          return React.createElement(\"div\", {\n            style: {\n              color: 'red'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, React.createElement(FormattedMessage, {\n            id: \"forget_password.email_not_valid\",\n            defaultMessage: \"Email is not valid\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }));\n        }\n      };\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(FormattedMessage, {\n        id: \"forget_password.enter_email\",\n        defaultMessage: \"Enter your email address: \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })), React.createElement(\"form\", {\n        onSubmit: this.onFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(FormattedMessage, {\n        id: \"forget_password.mail\",\n        defaultMessage: \"Email: \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }))), React.createElement(\"input\", {\n        placeholder: \"example@gmail.com\",\n        className: \"form-control\",\n        value: this.state.old_email,\n        onChange: this.onInputChange_old_email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"input-group-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        disabled: this.state.button_disable,\n        type: \"submit\",\n        className: \"btn btn-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(FormattedMessage, {\n        id: \"forget_password.confirm\",\n        defaultMessage: \"Confirm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }))), this.state.live_check_email && React.createElement(\"div\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \" \", React.createElement(FormattedMessage, {\n        id: \"error.email\",\n        defaultMessage: \"Email address not valid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), \" \"), this.state.email_not_exist && React.createElement(\"div\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \" \", React.createElement(FormattedMessage, {\n        id: \"forget_password.email_not_valid\",\n        defaultMessage: \"Email does not exsit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), \" \")), React.createElement(\"button\", {\n        style: {\n          color: 'red'\n        },\n        onClick: function onClick() {\n          _this3.props.history.push('/');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(FormattedMessage, {\n        id: \"login.back\",\n        defaultMessage: \"Back\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })), showErrors());\n    }\n  }]);\n\n  return Forget_Password;\n}(Component);\n\nexport default withRouter(Forget_Password);","map":{"version":3,"sources":["/mnt/z/work/ibet-django/front-end/src/components/forget_password.js"],"names":["React","Component","axios","withRouter","config","FormattedMessage","errors","API_URL","process","env","REACT_APP_REST_API","Forget_Password","props","state","old_email","success","errorCode","button_disable","live_check_email","email_not_exist","onInputChange_old_email","bind","onFormSubmit","event","re","target","value","match","setState","preventDefault","body","email","get","then","res","data","post","history","push","catch","err","EMAIL_NOT_VALID","showErrors","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { config } from '../util_config';\nimport { FormattedMessage } from 'react-intl';\nimport { errors } from './errors';\n\n\nconst API_URL = process.env.REACT_APP_REST_API;\n\nclass Forget_Password extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n           old_email: '',\n           success: false,\n           errorCode: '',\n\n           button_disable: true,\n\n           live_check_email: '',\n\n           email_not_exist: false\n        }\n\n        this.onInputChange_old_email  = this.onInputChange_old_email.bind(this);\n        this.onFormSubmit             = this.onFormSubmit.bind(this);\n    }\n\n    onInputChange_old_email(event){\n        var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (!event.target.value.match(re)){\n            this.setState({live_check_email: true, button_disable: true})\n        }else{\n            this.setState({live_check_email: false, button_disable: false})\n        }\n        this.setState({old_email: event.target.value, email_not_exist: false});\n    }\n\n    onFormSubmit(event){\n        event.preventDefault();\n      \n        const body = {\n            email: this.state.old_email\n        }\n\n        axios.get(API_URL + `users/api/checkemailexist/?email=${this.state.old_email}`, config)\n        .then(res => {\n            if (res.data === 'Exist'){\n                axios.post(API_URL + 'users/api/reset-password/', body, config)\n                .then(res => {\n                    this.setState({success: true})\n                    this.props.history.push(\"/email_sent\")\n                })\n                .catch((err) => {\n                    this.setState({errorCode: errors.EMAIL_NOT_VALID});\n                });\n            }else{\n                this.setState({email_not_exist: true})\n            }\n        })\n\n        \n    }\n\n    render(){\n\n        const showErrors = () => {\n            if (this.state.success) {\n                return (\n                    <div style={{color: 'red'}}> \n                        <FormattedMessage id=\"email_sent.message\" defaultMessage='An email has been sent to you email address to reset your password' /> \n                    </div>\n                );\n            } else if (this.state.errorCode === errors.EMAIL_NOT_VALID) {\n                return (\n                    <div style={{color: 'red'}}> \n                        <FormattedMessage id=\"forget_password.email_not_valid\" defaultMessage='Email is not valid' /> \n                    </div>\n                );\n            }\n        }\n        return (\n            <div> \n                <div><FormattedMessage id=\"forget_password.enter_email\" defaultMessage='Enter your email address: ' /></div>\n                <form onSubmit={this.onFormSubmit} >\n                    <label><b>\n                    <FormattedMessage id=\"forget_password.mail\" defaultMessage='Email: ' />\n                    </b></label>\n                    <input\n                        placeholder=\"example@gmail.com\"\n                        className=\"form-control\"\n                        value={this.state.old_email}\n                        onChange={this.onInputChange_old_email}\n                    />\n\n                    <span className=\"input-group-btn\">\n                        <button disabled = {this.state.button_disable} type=\"submit\" className=\"btn btn-secondary\"> \n                            <FormattedMessage id=\"forget_password.confirm\" defaultMessage='Confirm' />\n                        </button>\n                    </span>\n\n                    {this.state.live_check_email && <div style={{color: 'red'}}> <FormattedMessage  id=\"error.email\" defaultMessage='Email address not valid' /> </div>}\n\n                    {this.state.email_not_exist && <div style={{color: 'red'}}> <FormattedMessage  id=\"forget_password.email_not_valid\" defaultMessage='Email does not exsit' /> </div>}\n                </form>\n\n                <button style={{color: 'red'}} onClick={ () => {this.props.history.push('/')}}>\n                    <FormattedMessage id=\"login.back\" defaultMessage='Back' />\n                </button>\n\n                {\n                    showErrors()\n                }\n                \n            </div>\n        )\n    }\n}\n\nexport default withRouter(Forget_Password);"]},"metadata":{},"sourceType":"module"}