{"ast":null,"code":"import _classCallCheck from \"/mnt/z/work/ibet-django/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/z/work/ibet-django/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/mnt/z/work/ibet-django/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/mnt/z/work/ibet-django/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/mnt/z/work/ibet-django/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/mnt/z/work/ibet-django/front-end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/mnt/z/work/ibet-django/front-end/src/components/reset_password.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { errors } from './errors';\nimport { withRouter } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport { config } from '../util_config';\nimport PasswordStrengthMeter from './PasswordStrengthMeter';\nimport IoEye from 'react-icons/lib/io/eye';\nvar API_URL = process.env.REACT_APP_REST_API;\n\nvar Reset_Password =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Reset_Password, _Component);\n\n  function Reset_Password(props) {\n    var _this;\n\n    _classCallCheck(this, Reset_Password);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Reset_Password).call(this, props));\n    _this.state = {\n      show_page: true,\n      password1: '',\n      password2: '',\n      error_message: '',\n      errorCode: '',\n      hidden: true\n    };\n    _this.onInputChange_password1 = _this.onInputChange_password1.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onInputChange_password2 = _this.onInputChange_password2.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onFormSubmit = _this.onFormSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleShow = _this.toggleShow.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Reset_Password, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var body = {\n        token: this.props.location.pathname.slice(16)\n      };\n      axios.post(API_URL + 'users/api/reset-password/verify-token/', body, config).then(function (res) {// does nothing\n      }).catch(function (err) {\n        _this2.setState({\n          show_page: false\n        });\n      });\n    }\n  }, {\n    key: \"onInputChange_password1\",\n    value: function onInputChange_password1(event) {\n      this.setState({\n        password1: event.target.value\n      });\n    }\n  }, {\n    key: \"onInputChange_password2\",\n    value: function onInputChange_password2(event) {\n      this.setState({\n        password2: event.target.value\n      });\n    }\n  }, {\n    key: \"toggleShow\",\n    value: function toggleShow() {\n      this.setState({\n        hidden: !this.state.hidden\n      });\n    }\n  }, {\n    key: \"onFormSubmit\",\n    value: function onFormSubmit(event) {\n      var _this3 = this;\n\n      event.preventDefault();\n      var body = {\n        token: this.props.location.pathname.slice(16),\n        password: this.state.password1\n      };\n\n      if (this.state.password1 !== this.state.password2) {\n        this.setState({\n          errorCode: errors.PASSWORD_NOT_MATCH\n        });\n      } else if (this.state.password1.length < 8) {\n        this.setState({\n          errorCode: errors.PASSWORD_NOT_VALID\n        });\n      } else {\n        this.setState({\n          errorCode: ''\n        });\n        axios.post(API_URL + 'users/api/reset-password/confirm/', body, config).then(function (res) {\n          _this3.props.history.push(\"/reset_password_done\");\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var showErrors = function showErrors() {\n        if (_this4.state.errorCode === errors.PASSWORD_NOT_MATCH) {\n          return React.createElement(\"div\", {\n            style: {\n              color: 'red'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, React.createElement(FormattedMessage, {\n            id: \"reset_password.password_not_match\",\n            defaultMessage: \"Password not match\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }));\n        } else if (_this4.state.errorCode === errors.PASSWORD_NOT_VALID) {\n          return React.createElement(\"div\", {\n            style: {\n              color: 'red'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }, React.createElement(FormattedMessage, {\n            id: \"reset_password.password_not_valid\",\n            defaultMessage: \"Password not valid\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }));\n        }\n      };\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, this.state.show_page ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(FormattedMessage, {\n        id: \"reset_password.change_password\",\n        defaultMessage: \"Change your password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })), React.createElement(\"form\", {\n        onSubmit: this.onFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(FormattedMessage, {\n        id: \"reset_password.password\",\n        defaultMessage: \"Password: \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }))), React.createElement(\"input\", {\n        type: this.state.hidden ? \"password\" : \"text\",\n        placeholder: \"password\",\n        className: \"form-control\",\n        value: this.state.password1,\n        onChange: this.onInputChange_password1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        style: {\n          position: 'relative',\n          left: '-25px'\n        },\n        onMouseDown: this.toggleShow,\n        onMouseUp: this.toggleShow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \" \", React.createElement(IoEye, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), \" \"), this.state.password1 && React.createElement(PasswordStrengthMeter, {\n        password: this.state.password1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(FormattedMessage, {\n        id: \"reset_password.confirm_password\",\n        defaultMessage: \"Confirm Password: \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }))), React.createElement(\"input\", {\n        type: \"password\",\n        placeholder: \"password\",\n        className: \"form-control\",\n        value: this.state.password2,\n        onChange: this.onInputChange_password2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"input-group-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(FormattedMessage, {\n        id: \"reset_password.confirm\",\n        defaultMessage: \"Confirm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }))))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \" \", React.createElement(FormattedMessage, {\n        id: \"reset_password.page_not_valid\",\n        defaultMessage: \"You have successfully reset your password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), \" \"), // <div style={{color: 'red'}}> {this.state.error_message} </div>\n      showErrors());\n    }\n  }]);\n\n  return Reset_Password;\n}(Component);\n\nexport default withRouter(Reset_Password);","map":{"version":3,"sources":["/mnt/z/work/ibet-django/front-end/src/components/reset_password.js"],"names":["React","Component","axios","errors","withRouter","FormattedMessage","config","PasswordStrengthMeter","IoEye","API_URL","process","env","REACT_APP_REST_API","Reset_Password","props","state","show_page","password1","password2","error_message","errorCode","hidden","onInputChange_password1","bind","onInputChange_password2","onFormSubmit","toggleShow","body","token","location","pathname","slice","post","then","res","catch","err","setState","event","target","value","preventDefault","password","PASSWORD_NOT_MATCH","length","PASSWORD_NOT_VALID","history","push","showErrors","color","position","left"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { errors } from './errors';\nimport { withRouter } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport { config } from '../util_config';\nimport PasswordStrengthMeter from './PasswordStrengthMeter';\nimport IoEye from 'react-icons/lib/io/eye';\n\n\nconst API_URL = process.env.REACT_APP_REST_API;\n\nclass Reset_Password extends Component {\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n           show_page: true,\n           password1: '',\n           password2: '',\n           error_message: '',\n           errorCode: '',\n           hidden: true\n        }\n\n        this.onInputChange_password1  = this.onInputChange_password1.bind(this);\n        this.onInputChange_password2  = this.onInputChange_password2.bind(this);\n        this.onFormSubmit             = this.onFormSubmit.bind(this);\n        this.toggleShow               = this.toggleShow.bind(this);\n    }\n\n    componentDidMount() {\n\n        const body = {\n            token: this.props.location.pathname.slice(16)\n        }\n\n        axios.post(API_URL + 'users/api/reset-password/verify-token/', body, config)\n        .then(res => {\n          // does nothing\n        }).catch(err => {\n          this.setState({show_page: false})\n        })\n    }\n\n    onInputChange_password1(event){\n        this.setState({password1: event.target.value});\n    }\n\n    onInputChange_password2(event){\n        this.setState({password2: event.target.value});\n    }\n\n    toggleShow() {\n        this.setState({ hidden: !this.state.hidden });\n      }\n\n    onFormSubmit(event){\n        event.preventDefault();\n\n        const body = {\n            token: this.props.location.pathname.slice(16),\n            password: this.state.password1\n        }\n        \n        if (this.state.password1 !== this.state.password2) {\n            this.setState({ errorCode: errors.PASSWORD_NOT_MATCH });\n        } else if ( this.state.password1.length < 8){ \n            this.setState({ errorCode: errors.PASSWORD_NOT_VALID });\n        } else {\n            this.setState({ errorCode: '' });\n            axios.post(API_URL + 'users/api/reset-password/confirm/', body, config)\n            .then(res => {\n                this.props.history.push(\"/reset_password_done\")\n            })\n        }\n    }\n\n    render(){\n\n        const showErrors = () => {\n            if (this.state.errorCode === errors.PASSWORD_NOT_MATCH) {\n                return (\n                    <div style={{color: 'red'}}> \n                        <FormattedMessage id=\"reset_password.password_not_match\" defaultMessage='Password not match' /> \n                    </div>\n                );\n            } else if (this.state.errorCode === errors.PASSWORD_NOT_VALID) {\n                return (\n                    <div style={{color: 'red'}}> \n                        <FormattedMessage id=\"reset_password.password_not_valid\" defaultMessage='Password not valid' /> \n                    </div>\n                );\n            } \n        }\n\n        return (\n            <div> \n                {\n                    this.state.show_page ?\n                    <div>\n                        <div>\n                        <FormattedMessage id=\"reset_password.change_password\" defaultMessage='Change your password' />      \n                        </div>\n                        <form onSubmit={this.onFormSubmit} >\n\n                        <div> \n                            <label><b>\n                            <FormattedMessage id=\"reset_password.password\" defaultMessage='Password: ' /> \n                            </b></label>\n                            <input\n                                type={this.state.hidden ? \"password\" : \"text\"}\n                                placeholder=\"password\"\n                                className=\"form-control\"\n                                value={this.state.password1}\n                                onChange={this.onInputChange_password1}\n                            />\n\n                            <span style = {{position: 'relative',  left: '-25px'}} onMouseDown={this.toggleShow} onMouseUp={this.toggleShow}> <IoEye /> </span>\n\n                            {\n                              this.state.password1 && <PasswordStrengthMeter password={this.state.password1} />\n                            }\n                            \n                        </div>\n\n                        <div>\n                            <label><b>\n                            <FormattedMessage id=\"reset_password.confirm_password\" defaultMessage='Confirm Password: ' />     \n                            </b></label>\n                            <input\n                                type=\"password\"\n                                placeholder=\"password\"\n                                className=\"form-control\"\n                                value={this.state.password2}\n                                onChange={this.onInputChange_password2}\n                            />\n                        </div>\n                            <span className=\"input-group-btn\">\n                                <button type=\"submit\" className=\"btn btn-secondary\"> \n                                <FormattedMessage id=\"reset_password.confirm\" defaultMessage='Confirm' />      \n                                </button>\n                            </span>\n                        </form>\n                    </div>\n                    : \n                    <div> <FormattedMessage id=\"reset_password.page_not_valid\" defaultMessage='You have successfully reset your password' /> </div>\n                }\n\n                {\n                    // <div style={{color: 'red'}}> {this.state.error_message} </div>\n                    showErrors()\n                }\n\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Reset_Password);"]},"metadata":{},"sourceType":"module"}